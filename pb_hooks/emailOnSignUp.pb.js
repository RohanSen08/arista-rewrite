// Ensure this file is placed adjacent to the pb_data folder of your PocketBase database
onRecordUpdate(async (e) => {
    try {
        const oldRecord = e.record.original();
        const oldSignups = oldRecord.get("signed_up") || [];
        const currentSignups = e.record.get("signed_up") || [];

        const newSignups = currentSignups.filter(v => !oldSignups.includes(v));

        console.log(`New signups: ${newSignups}`);

        for (const signupUserId of newSignups) {
            try {
                const user = await $app.findRecordById("users", signupUserId);
                const email = user.get("email");
                const userName = user.get("name");
                const eventName = e.record.get("name");

                const message = new MailerMessage({
                    from: {
                        address: $app.settings().meta.senderAddress,
                        name: $app.settings().meta.senderName,
                    },
                    to: [{ address: email }],
                    subject: `Signed up for ${eventName}`,
                    html: `
        <p>Dear ${userName},</p>
        <p>You have signed up for ${eventName}.</p>
        <p>Sincerely,</p>
        <p>ARISTA Web Committee</p>
        <p>This is an automated email generated by the website -- if you have received this email in error, please contact us at stuyaristanycweb@gmail.com</p>
    `,
                });

                await $app.newMailClient().send(message);
                console.log(`Signup email sent to ${email}`);
            } catch (userError) {
                console.error(`Failed to process signup for user ID ${signupUserId}:`, userError);
            }
        }
    } catch (error) {
        console.error('Error processing record update:', error);
    } finally {
        e.next();
    }
}, "events");

