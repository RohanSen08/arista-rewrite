onRecordCreate(async (e) => {
    try {
        const strikedUserId = e.record.get("strikedUser");
        const userRecord = await $app.findRecordById("users", strikedUserId);

        if (!userRecord) {
            console.error(`User with ID ${strikedUserId} not found.`);
            return;
        }

        const email = userRecord.get("email");
        const userName = userRecord.get("name");
        const strikeReason = e.record.get("reason");
        const strikeWeight = e.record.get("weight");

        const message = new MailerMessage({
            from: {
                address: $app.settings().meta.senderAddress,
                name: $app.settings().meta.senderName,
            },
            to: [{ address: email }],
            subject: `[ARISTA] STRIKE NOTIFICATION`,
            html: `
<p>Dear ${userName},</p>

<p>We are writing to inform you that a strike has been recorded in your ARISTA account.</p>

<p>Reason: ${strikeReason}</p>

<p>Weight: ${strikeWeight} strikes</p>

<p>Please be advised that this strike will be considered when reviewing your membership status and overall standing in the society.</p>

<p>If you believe this strike was issued in error, please reach out to us as soon as possible, or if this strike results in your removal from ARISTA you may appeal the strike at the end of the semester via the appeals form that will be sent out. </p>

<p>Best,</p>
<p>ARISTA EC</p>

<p>This is an automated email generated by the website -- if you have received this email in error, please contact us at stuyaristanycweb@gmail.com</p>
`, // Consider using a template for better maintainability.
        });

        await $app.newMailClient().send(message);
        console.log(`Strike email sent to ${email}`);
    } catch (error) {
        console.error(`Error processing onRecordCreate: ${error.message}`);
    }

    e.next();
}, "strikes");

